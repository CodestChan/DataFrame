测试顺序表的代码
/*
 	SqList L;
	InitList(L);
	ListInsert(L, 1, 18);
	ListInsert(L, 1, 52);
	ListInsert(L, 1, 96);
	int search;
	GetElem(L, 2, search);
	int index = LocateElem(L, 96);
	cout << search << endl;
	cout << index << endl;
	TraverseList(L);
*/

测试单链表的代码
/*
* 	LinkList L;
	InitLinkList(L);
	ListLinkInsert(L, 1, 15);
	ListLinkInsert(L, 2, 52);
	ListLinkInsert(L, 3, 69);
	int elem;
	GetLinkElem(L, 2, elem);
	LinkList index;
	index=LocateLinkElem(L, 52);
	LinkList p;
	p = L->next;
	while (p) {
		cout << p->data<<endl;
		p=p->next;
	}
	cout << "第二个元素是：" << elem<<endl;
	cout << "数值为52的元素位置是：" << index << endl;
	cout << index->data << " " << index->next << endl;
*/

//循环链表测试：插入和遍历
/*
	CirLink L;
	InitCirLink(L);
	CirLinkInsert(L, 1, 23);
	CirLinkInsert(L, 1, 24);
	CirLink p;
	p = L;
	while (p->next != L) {
		p = p->next;
		cout << p->cdata << endl;
	}
	return 0;
*/
//循环链表测试：循环遍历
/*
	CirLink p=L;
	for (int i = 0; i < 10; i++) {
		p = p->next;
		if (p == L)continue;
		cout << p->cdata << endl;
		cout << endl;
	}
*/